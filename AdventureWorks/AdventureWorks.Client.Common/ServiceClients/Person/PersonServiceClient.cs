//---------------------------------------------------------------------------------------------
// This file was AUTO-GENERATED by "REST Service Clients" Xomega.Net generator.
//
// Manual CHANGES to this file WILL BE LOST when the code is regenerated.
//---------------------------------------------------------------------------------------------

using Microsoft.Extensions.Options;
using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Resources;
using System.Text.Json;
using System.Threading;
using System.Threading.Tasks;
using Xomega.Framework.Services;

namespace AdventureWorks.Services.Common
{
    ///<summary>
    /// Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.
    ///</summary>
    public class PersonServiceClient : HttpServiceClient, IPersonService
    {
        protected readonly JsonSerializerOptions SerializerOptions;

        public PersonServiceClient(HttpClient httpClient, IOptionsMonitor<JsonSerializerOptions> options, ResourceManager resourceManager)
            : base(httpClient, resourceManager)
        {
            SerializerOptions = options.CurrentValue;
        }

        /// <inheritdoc/>
        public virtual async Task<Output> AuthenticateAsync(Credentials _credentials, CancellationToken token = default)
        {
            await Task.CompletedTask;
            throw new NotSupportedException("Operation IPersonService.AuthenticateAsync is not exposed via REST.");
        }

        /// <inheritdoc/>
        public virtual async Task<Output<PersonInfo>> ReadAsync(string _email, CancellationToken token = default)
        {
            await Task.CompletedTask;
            throw new NotSupportedException("Operation IPersonService.ReadAsync is not exposed via REST.");
        }

        /// <inheritdoc/>
        public virtual async Task<Output<ICollection<PersonCreditCard_ReadEnumOutput>>> CreditCard_ReadEnumAsync(int _businessEntityId, CancellationToken token = default)
        {
            HttpRequestMessage msg = new (HttpMethod.Get, $"person/{ _businessEntityId }/credit-card/enum");
            using var resp = await Http.SendAsync(msg, HttpCompletionOption.ResponseHeadersRead, token);
            var content = await ReadOutputContentAsync(resp);
            return await JsonSerializer.DeserializeAsync<Output<ICollection<PersonCreditCard_ReadEnumOutput>>>(content, SerializerOptions, token);
        }
    }
}