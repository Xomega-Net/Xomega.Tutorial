//---------------------------------------------------------------------------------------------
// This file was AUTO-GENERATED by "Xomega Data Objects" Xomega.Net generator.
//
// Manual CHANGES to this file WILL BE LOST when the code is regenerated.
//---------------------------------------------------------------------------------------------

using AdventureWorks.Services.Common;
using Microsoft.Extensions.DependencyInjection;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Xomega.Framework;
using Xomega.Framework.Properties;
using Xomega.Framework.Services;

namespace AdventureWorks.Client.Common.DataObjects
{
    public partial class SalesOrderReasonList : DataListObject
    {
        #region Constants

        public const string ModifiedDate = "ModifiedDate";
        public const string SalesReasonId = "SalesReasonId";

        #endregion

        #region Properties

        public DateTimeProperty ModifiedDateProperty { get; private set; }
        public IntegerKeyProperty SalesReasonIdProperty { get; private set; }

        #endregion

        #region Actions

        public ActionProperty DetailsAction { get; private set; }
        public ActionProperty NewAction { get; private set; }

        #endregion

        #region Construction

        public SalesOrderReasonList()
        {
        }

        public SalesOrderReasonList(IServiceProvider serviceProvider) : base(serviceProvider)
        {
        }

        protected override void Initialize()
        {
            SalesReasonIdProperty = new IntegerKeyProperty(this, SalesReasonId)
            {
                Required = true,
                Editable = false,
                IsKey = true,
            };
            ModifiedDateProperty = new DateTimeProperty(this, ModifiedDate)
            {
                Required = true,
                Editable = false,
            };
          DetailsAction = new ActionProperty(this, "Details");
          NewAction = new ActionProperty(this, "New");
        }

        #endregion

        #region CRUD Operations

        protected override async Task<ErrorList> DoReadAsync(object options, CancellationToken token = default)
        {
            var output = await SalesOrder_Reason_ReadListAsync(options, 
                Parent == null ? default : (int)(Parent as SalesOrderObject).SalesOrderIdProperty.TransportValue, token);
            return output.Messages;
        }

        #endregion

        #region Service Operations

        protected virtual async Task<Output<ICollection<SalesOrderReason_ReadListOutput>>> SalesOrder_Reason_ReadListAsync(object options, int _salesOrderId, CancellationToken token = default)
        {
            using (var s = ServiceProvider.CreateScope())
            {
                var output = await s.ServiceProvider.GetService<ISalesOrderService>().Reason_ReadListAsync(_salesOrderId, token);

                await FromDataContractAsync(output?.Result, options, token);
                return output;
            }
        }

        #endregion
    }
}