//---------------------------------------------------------------------------------------------
// This file was AUTO-GENERATED by "Xomega Data Objects" Xomega.Net generator.
//
// Manual CHANGES to this file WILL BE LOST when the code is regenerated.
//---------------------------------------------------------------------------------------------

using AdventureWorks.Services.Common;
using Microsoft.Extensions.DependencyInjection;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Xomega.Framework;
using Xomega.Framework.Properties;
using Xomega.Framework.Services;

namespace AdventureWorks.Client.Common.DataObjects
{
    public partial class SalesOrderDetailList : DataListObject
    {
        #region Constants

        public const string CarrierTrackingNumber = "CarrierTrackingNumber";
        public const string LineTotal = "LineTotal";
        public const string ModifiedDate = "ModifiedDate";
        public const string OrderQty = "OrderQty";
        public const string ProductId = "ProductId";
        public const string Rowguid = "Rowguid";
        public const string SalesOrderDetailId = "SalesOrderDetailId";
        public const string SpecialOfferId = "SpecialOfferId";
        public const string UnitPrice = "UnitPrice";
        public const string UnitPriceDiscount = "UnitPriceDiscount";

        #endregion

        #region Properties

        public TextProperty CarrierTrackingNumberProperty { get; private set; }
        public DecimalProperty LineTotalProperty { get; private set; }
        public DateTimeProperty ModifiedDateProperty { get; private set; }
        public SmallIntegerProperty OrderQtyProperty { get; private set; }
        public IntegerKeyProperty ProductIdProperty { get; private set; }
        public GuidProperty RowguidProperty { get; private set; }
        public IntegerKeyProperty SalesOrderDetailIdProperty { get; private set; }
        public IntegerKeyProperty SpecialOfferIdProperty { get; private set; }
        public MoneyProperty UnitPriceProperty { get; private set; }
        public MoneyProperty UnitPriceDiscountProperty { get; private set; }

        #endregion

        #region Actions

        public ActionProperty DetailsAction { get; private set; }
        public ActionProperty NewAction { get; private set; }

        #endregion

        #region Construction

        public SalesOrderDetailList()
        {
        }

        public SalesOrderDetailList(IServiceProvider serviceProvider) : base(serviceProvider)
        {
        }

        protected override void Initialize()
        {
            SalesOrderDetailIdProperty = new IntegerKeyProperty(this, SalesOrderDetailId)
            {
                Required = true,
                Editable = false,
                IsKey = true,
            };
            CarrierTrackingNumberProperty = new TextProperty(this, CarrierTrackingNumber)
            {
                Size = 25,
                Editable = false,
            };
            OrderQtyProperty = new SmallIntegerProperty(this, OrderQty)
            {
                Required = true,
                Editable = false,
            };
            SpecialOfferIdProperty = new IntegerKeyProperty(this, SpecialOfferId)
            {
                Required = true,
                Editable = false,
            };
            ProductIdProperty = new IntegerKeyProperty(this, ProductId)
            {
                Required = true,
                Editable = false,
            };
            UnitPriceProperty = new MoneyProperty(this, UnitPrice)
            {
                Required = true,
                Editable = false,
            };
            UnitPriceDiscountProperty = new MoneyProperty(this, UnitPriceDiscount)
            {
                Required = true,
                Editable = false,
            };
            LineTotalProperty = new DecimalProperty(this, LineTotal)
            {
                Required = true,
                Editable = false,
            };
            RowguidProperty = new GuidProperty(this, Rowguid)
            {
                Required = true,
                Editable = false,
            };
            ModifiedDateProperty = new DateTimeProperty(this, ModifiedDate)
            {
                Required = true,
                Editable = false,
            };
          DetailsAction = new ActionProperty(this, "Details");
          NewAction = new ActionProperty(this, "New");
        }

        #endregion

        #region CRUD Operations

        protected override async Task<ErrorList> DoReadAsync(object options, CancellationToken token = default)
        {
            var output = await SalesOrder_Detail_ReadListAsync(options, 
                Parent == null ? default : (int)(Parent as SalesOrderObject).SalesOrderIdProperty.TransportValue, token);
            return output.Messages;
        }

        #endregion

        #region Service Operations

        protected virtual async Task<Output<ICollection<SalesOrderDetail_ReadListOutput>>> SalesOrder_Detail_ReadListAsync(object options, int _salesOrderId, CancellationToken token = default)
        {
            using (var s = ServiceProvider.CreateScope())
            {
                var output = await s.ServiceProvider.GetService<ISalesOrderService>().Detail_ReadListAsync(_salesOrderId, token);

                await FromDataContractAsync(output?.Result, options, token);
                return output;
            }
        }

        #endregion
    }
}